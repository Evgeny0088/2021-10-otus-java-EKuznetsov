plugins {
    id 'java'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

dependencies {
    dependencies {
        implementation 'ch.qos.logback:logback-classic:1.2.10'
        implementation 'org.flywaydb:flyway-core:8.3.0'
        implementation 'com.zaxxer:HikariCP:5.0.0'
        implementation 'org.postgresql:postgresql:42.3.1'
        implementation 'org.slf4j:slf4j-api:1.7.32'

        testImplementation ('org.junit.jupiter:junit-jupiter-api:5.8.2')
        testImplementation ('org.junit.jupiter:junit-jupiter-engine:5.8.2')
        testImplementation ('org.junit.jupiter:junit-jupiter-params:5.8.2')
        testImplementation ('org.assertj:assertj-core:3.21.0')
        testImplementation ('org.mockito:mockito-core:4.1.0')
        testImplementation ('org.mockito:mockito-junit-jupiter:4.1.0')
        testImplementation ('org.testcontainers:testcontainers:1.16.2')
        testImplementation ('org.testcontainers:junit-jupiter:1.16.2')
        testImplementation ('org.testcontainers:postgresql:1.15.3')
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.with {
        encoding = 'UTF-8'
    }
}
